// <auto-generated />
using System;
using BusinessLogic.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessLogic.Migrations
{
    [DbContext(typeof(DepositContext))]
    [Migration("20250611113751_AddMaxAmountAndMaxTermMonthsToDepositCatalog")]
    partial class AddMaxAmountAndMaxTermMonthsToDepositCatalog
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BusinessLogic.Models.Deposit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("MaxAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("MaxTermMonths")
                        .HasColumnType("int");

                    b.Property<decimal>("MinAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("MinTermMonths")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Deposits");
                });

            modelBuilder.Entity("BusinessLogic.Models.DepositCatalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalConditions")
                        .HasColumnType("longtext");

                    b.Property<bool>("AllowsTopUp")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContractInterestDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("Currency")
                        .HasColumnType("longtext");

                    b.Property<string>("DepositName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DepositType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ForWho")
                        .HasColumnType("longtext");

                    b.Property<string>("InterestPayout")
                        .HasColumnType("longtext");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("InterestType")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsInterestCapitalized")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsMonthlyCompounding")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("MaxAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("MaxTermMonths")
                        .HasColumnType("int");

                    b.Property<decimal?>("MinAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("MinAmountDescription")
                        .HasColumnType("longtext");

                    b.Property<int?>("MinTermMonths")
                        .HasColumnType("int");

                    b.Property<bool>("OverdraftAllowed")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ValidTermsDescription")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DepositCatalogs");
                });
#pragma warning restore 612, 618
        }
    }
}
